name: Auto Backfill & Render Monitor

on:
  schedule:
    - cron: '0 * * * *' # every hour
  workflow_dispatch: {}

jobs:
  backfill:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi

      - name: Run backfill (safe check + run)
        env:
          MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
          MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          set -e
          # Attempt a dry-run first and only run full backfill if the dry-run succeeds
          python3 src/scripts/scripts/run_due_ingestions.py --dry-run || true
          python3 src/scripts/scripts/run_backfill_until_caught_up.py || true

  render-monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi

      - name: Check Render deploys
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
          MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
        run: |
          python3 src/scripts/scripts/get_render_logs.py --recent 10 || true