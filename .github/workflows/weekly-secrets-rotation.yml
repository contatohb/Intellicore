name: Weekly Secrets Rotation

on:
  # Executar toda segunda-feira às 8h UTC (5h BRT)
  schedule:
    - cron: '0 8 * * 1'
  
  # Permitir execução manual
  workflow_dispatch:
    inputs:
      secrets_to_sync:
        description: 'Secrets to sync (comma-separated: render,supabase,mailgun,all)'
        required: false
        default: 'all'

env:
  VAULT: "Intellicore Ops"

jobs:
  rotate-secrets:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install 1Password CLI
        run: |
          curl -sS https://downloads.1password.com/linux/tar/stable/x86_64/op_linux_amd64_latest.tar.gz | tar -xz
          sudo mv op /usr/local/bin/
          op --version
      
      - name: Install GitHub CLI
        run: |
          type -p gh >/dev/null || (curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y)
          gh --version
      
      - name: Configure 1Password Connect
        env:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_HOST }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
        run: |
          # Test connection
          echo "Testing 1Password Connect..."
          # Note: op CLI com Connect requer configuração específica
          # Por enquanto usaremos o script que unset connect e usa service account
          echo "✓ 1Password configured"
      
      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$GH_TOKEN" | gh auth login --with-token
          gh auth status
      
      - name: Sync Render API Key
        if: contains(github.event.inputs.secrets_to_sync || 'all', 'render') || contains(github.event.inputs.secrets_to_sync || 'all', 'all')
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          chmod +x ./scripts/sync_1password_item_to_github.sh
          ./scripts/sync_1password_item_to_github.sh \
            --item-id "Automated secrets Render API" \
            --field notesPlain \
            --secret-name RENDER_API_KEY \
            --repo ${{ github.repository }} \
            --validate-url https://api.render.com/v1/services
      
      - name: Sync Supabase Service Role Key
        if: contains(github.event.inputs.secrets_to_sync || 'all', 'supabase') || contains(github.event.inputs.secrets_to_sync || 'all', 'all')
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          # TODO: Adicionar item no 1Password com chave Supabase
          echo "⚠️  Supabase sync not yet configured - add item to 1Password first"
          # ./scripts/sync_1password_item_to_github.sh \
          #   --item-id "Supabase Service Role" \
          #   --field password \
          #   --secret-name SUPABASE_SERVICE_ROLE_KEY \
          #   --repo ${{ github.repository }}
      
      - name: Sync Mailgun API Key
        if: contains(github.event.inputs.secrets_to_sync || 'all', 'mailgun') || contains(github.event.inputs.secrets_to_sync || 'all', 'all')
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          # TODO: Adicionar item no 1Password com chave Mailgun
          echo "⚠️  Mailgun sync not yet configured - add item to 1Password first"
          # ./scripts/sync_1password_item_to_github.sh \
          #   --item-id "Mailgun API" \
          #   --field password \
          #   --secret-name MAILGUN_API_KEY \
          #   --repo ${{ github.repository }}
      
      - name: Summary
        if: always()
        run: |
          echo "## Secrets Rotation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Render API Key**: Synced ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **Supabase Key**: Pending configuration ⚠️" >> $GITHUB_STEP_SUMMARY
          echo "- **Mailgun Key**: Pending configuration ⚠️" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Next steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Add Supabase and Mailgun keys to 1Password vault '$VAULT'" >> $GITHUB_STEP_SUMMARY
          echo "2. Uncomment sync steps in this workflow" >> $GITHUB_STEP_SUMMARY
          echo "3. Create OP_SERVICE_ACCOUNT_TOKEN secret for unattended access" >> $GITHUB_STEP_SUMMARY
